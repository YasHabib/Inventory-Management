<SearchAndDisplayInventories OnInventorySelected="OninventorySelected"></SearchAndDisplayInventories>
@if(this.Product.ProductInventories != null && this.Product.ProductInventories.Count > 0)
{
    <table class="table">
        <thread>
            <tr>
                <th>Name</th>
                <th>Quantity</th>
                <th></th>
            </tr>
        </thread>
        <tbody>
            @foreach(var prodInventory in this.Product.ProductInventories)
            {
                <tr>
                    <td>
                       @prodInventory.Inventory?.InventoryName
                    </td>
                    <td>
                        <input type="number" min="0" @bind-value="prodInventory.InventoryQuantity"/>
                    </td>
                    <td>
                        <button class="btn btn-link" type="button" 
                        @onclick="@(()=>RemoveInventory(prodInventory))">Remove</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    [Parameter]
    public Product Product { get; set; } = new Product();

    private void RemoveInventory(ProductInventory productInventory){
        this.Product.ProductInventories.Remove(productInventory);
    }

    private void OninventorySelected(Inventory inventory)
    {
        this.Product.AddInventory(inventory);
    }
}
