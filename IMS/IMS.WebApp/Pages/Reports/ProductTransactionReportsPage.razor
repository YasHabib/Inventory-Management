@page "/productreport"
@using static IMS.WebApp.Components.Common.AutoCompleteComponent
@inject ISearchProductTransactionsUseCase _searchProductUseCase
@inject IJSRuntime JSRuntime

<h3>Product Transactions</h3>
<br />

<div class="row">
    <div class="col">
        <label for="prod">Product Name</label>
        <input type="text" id="prod" class="form-control" @bind-value="prodName"/>
    </div>
    <div class="col">
        <label for="df">Date From</label>
        <input type="date" id="df" class="form-control" @bind-value="dateForm" />
    </div>
    <div class="col">
        <label for="dt">Date To</label>
        <input type="date" id="dt" class="form-control" @bind-value="dateTo" />
    </div>
    <div class="col">
        <label for="at">Activity Type</label>
        <select id="at" class="form-control" @bind="activityTypeId">
            <option value="0"></option>
            <option value="1">Produce Product</option>
            <option value="2">Sell Product</option>
        </select>
    </div>
    <div class="col">
        <label>&nbsp;</label>
        <button type="button" class="btn btn-primary form-control" @onclick="SearchProducts">Search</button>
    </div>
    <div class="col">
        <label>&nbsp;</label>
        <button type="button" class="btn btn-primary form-control" @onclick="PrintReport">Print</button>
    </div>
</div>
<br />
@if(productTransactions != null){
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Product</th>
                <th>Activity</th>
                <th>Quantity (before)</th>
                <th>Quantity (after)</th>
                <th>Unit Price</th>
                <th>Sales Order #</th>
                <th>Production #</th>
                <th>Completed By</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var prodTrans in productTransactions){
                <tr>
                    <td>@prodTrans.TransactionDate.ToString("MM/dd/yyyy")</td>
                    <td>@prodTrans.Product.ProductName</td>
                    <td>
                        @if(prodTrans.ActivityType == ProductTransactionType.SellProduct){
                            <text>Produce</text>
                        }
                        else if(prodTrans.ActivityType == ProductTransactionType.ProduceProduct){
                            <text>Produce</text>
                        }
                    </td>
                    <td>@prodTrans.QuantityBefore</td>
                    <td>@prodTrans.QuantityAfter</td>
                    <td>@prodTrans.UnitPrice?.ToString("c")</td>
                    <td>@prodTrans.SalesOrderNumber</td>
                    <td>@prodTrans.ProductionNumber</td>
                    <td>@prodTrans.CompletedBy</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private string prodName = string.Empty;
    private DateTime? dateForm;
    private DateTime? dateTo;
    private int activityTypeId = 0;
    private IEnumerable<ProductTransaction>? productTransactions;

    private async Task SearchProducts()
    {
        ProductTransactionType? prodType = null; 
        if(activityTypeId != 0){
            prodType = (ProductTransactionType)activityTypeId;
        }

        productTransactions =await _searchProductUseCase.ExecuteAsync(prodName, dateForm, dateTo, prodType);
    }

    private void PrintReport(){
        JSRuntime.InvokeVoidAsync("print");
    }
}
