@page "/addInventory"
@inject IAddInventoryUseCase _addInventoryUseCase

<h3>Add a new Product</h3>
<br/>

<EditForm Model="inventory" OnValidSubmit="SaveInventory">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-group">
        <label for="name">Product Name</label>
        <InputText id="name" class="form-control" @bind-Value="inventory.ProductName"></InputText>
        <label for="quantity">Quanity</label>
        <InputNumber id="quantity" class="form-control" @bind-Value="inventory.Quantity"></InputNumber>
        <label for="price">Price</label>
        <InputNumber id="price" class="form-control" @bind-Value="inventory.Price"></InputNumber>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {
    private Inventory inventory = new Inventory();

    private async Task SaveInventory(){
        await _addInventoryUseCase.ExecuteAsync(inventory);
        navManager.NavigateTo("/inventories");
    }


}
